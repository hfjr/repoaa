<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		   http://www.springframework.org/schema/aop
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		   http://www.springframework.org/schema/task
		   http://www.springframework.org/schema/task/spring-task-3.0.xsd
		   http://www.springframework.org/schema/cache   
           http://www.springframework.org/schema/cache/spring-cache.xsd
		   ">

	<!-- 配置文件加载 -->
	<context:property-placeholder location="classpath:base-info.properties" />
	<!-- 自动完成注解内容 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:annotation-config /><!--开启注解 -->
	<context:component-scan base-package="com">
		<context:exclude-filter type="aspectj"
			expression="*..controller.*Controller" />
	</context:component-scan>
	<task:annotation-driven /> <!-- 定时器开关 -->
	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- JNDI方式 <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${dataSourceJNDI}" /> <property name="expectedType" 
		value="javax.sql.DataSource" /> </bean> -->
	<!-- 配置DataSource数据源 -->
	<!-- 配置DataSource数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 池启动时创建的连接数量 -->
		<property name="initialSize" value="${db.initialSize}" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="${db.minIdle}" />
		<!-- 最大连接数据库连接数 -->
		<property name="maxActive" value="${db.maxActive}" />
		<!-- 最大等待连接中的数量，设置为0时，表示没有限制 -->
		<property name="maxIdle" value="${db.maxIdle}" />
		<!-- 最大等待秒数，单位为毫秒， 超过时间会报出错误信息(毫秒) -->
		<property name="maxWait" value="3000" />

		<!-- 1000秒自动重新校验下连接 保证连接是正常的 -->
		<property name="timeBetweenEvictionRunsMillis" value="10000000" />
		<property name="testWhileIdle" value="true" />
		<!-- 每次拿连接都会运行sql校验，false为佳否则有性能问题 -->
		<property name="testOnBorrow" value="false" />

		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="300" />

		<property name="validationQuery" value="SELECT 1" />
	</bean>


	<!-- MyBatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/core/MyBatisConfiguration.xml" />
		<property name="mapperLocations" value="classpath*:/mapper/**/*Mapper.xml" />
		<!-- <property name="transactionFactory"> -->
		<!-- <bean -->
		<!-- class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" 
			/> -->
		<!-- </property> -->
	</bean>

	<!-- MapperScannerConfigurer配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage" value="com" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="annotationClass" value="com.fab.server.annotation.Mapper" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- a PlatformTransactionManager is still required -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- (this dependency is defined somewhere else) -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 文件上传处理类 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>104857600</value><!-- 上传文件大小限制为100M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>


	<!-- 缓存 属性 -->
    <bean id="cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:core/ehcache-config.xml" />
	</bean>
 
	<!-- 支持缓存注解 -->
	 <cache:annotation-driven cache-manager="cacheManager" />  

	<!-- 默认是cacheManager -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactory" />
	</bean> 

<!-- 	<bean id="webLogAspect" class="com.zhuanyi.vjwealth.wallet.mobile.common.aspect.WebLogAspect" /> -->

	 <import resource="application-dubbo.xml" />
	
	 <import resource="classpath*:/baffle/baffle*.xml" />

<!--     <import resource="classpath*:/waf/waf*.xml" /> -->
</beans>