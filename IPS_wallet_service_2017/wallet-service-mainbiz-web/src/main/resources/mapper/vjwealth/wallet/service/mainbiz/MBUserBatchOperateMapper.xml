<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Mapper接口 -->
<mapper namespace="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.server.integration.mapper.IMBUserBatchOperateMapper">


	<!--批字号是否合法-->
	<select id="countBatchOpenAccountByFileBatchNo" parameterType="java.lang.String" resultType="java.lang.Integer">
		select 
			count(1)
		from 
			wj_channel_batch_open_account batchOpenAccount, wj_channel_batch_file batchFile
		where	
		 	 batchOpenAccount.file_batch_no = #{fileBatchNo}
		 and batchOpenAccount.file_batch_no = batchFile.file_batch_no
		 and batchFile.file_check_status = 'check_success'
		 and batchFile.is_handled = 'no_handled'
	</select>
	
	
	<!-- 查询开户用户记录 -->
	<select id="queryBatchOpenAccountByFileBatchNo" parameterType="java.lang.String" resultType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		select 
			#{fileBatchNo} as fileBatchNo ,
			batchFile.enterprise_no as enterpriseNo,
			batchOpenAccount.cid as cid ,
			batchOpenAccount.id as id ,
			batchOpenAccount.bank_code as bankCode,
			batchOpenAccount.bank_name as bankName,
			batchOpenAccount.card_name as realName,
			batchOpenAccount.card_no as bankCardNo,
			batchOpenAccount.channel_no as channelNo,
			batchOpenAccount.trade_type as tradeType,
			batchOpenAccount.phone as phone,
			batchOpenAccount.phone as asideBankPhone,
			batchOpenAccount.id_type as indentityType,
			batchOpenAccount.id_no as indentityNo
		from 
			wj_channel_batch_open_account batchOpenAccount, wj_channel_batch_file batchFile
		where	
		 	 batchOpenAccount.file_batch_no = #{fileBatchNo}
		 and batchOpenAccount.file_batch_no = batchFile.file_batch_no
		 and batchFile.file_check_status = 'check_success'
		 and batchFile.is_handled = 'no_handled'
	</select>
	
	<!-- 查询审核通过用户Id (营销活动-事件采集用)-->
	<select id="queryBatchOpenAccountSuccessUserByFileBatchNo" parameterType="java.lang.String" resultType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		select
			info.id as userId,
			batchOpenAccount.phone as phone
		from
			wj_channel_batch_open_account batchOpenAccount, wj_channel_batch_file batchFile, wj_user_info info
		where
			batchOpenAccount.file_batch_no =  #{fileBatchNo}
			and batchOpenAccount.file_batch_no = batchFile.file_batch_no
			and batchOpenAccount.phone = info.phone
			and info.is_sign = 0
			and batchOpenAccount.check_status = 'audit_success';

	</select>

	<!-- 查询开户申请记录 -->
	<select id="queryBatchOpenAccountRequestByFileBatchNo" parameterType="java.lang.String" resultType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		SELECT
		     id AS id,
			 CASE
			 WHEN T.check_status = 'fail' THEN
				'失败'
			 WHEN T.check_status = 'success' THEN
				'成功'
			 ELSE
				''
			 END AS checkStatus,
	         T.id_type AS indentityType,
			 T.id_no AS indentityNo,
			 T.phone AS phone,
			 T.phone as asideBankPhone,
			 T.card_name AS realName,
			 T.bank_name AS bankName,
			 T.bank_code AS bankCode,
			 T.card_no as bankCardNo,
			 T.trade_type AS tradeType,
			 T.file_batch_no AS fileBatchNo,
			 T.enterprise_name AS enterpriseName,
			 T.channel_no   AS channelNo,
			 CASE WHEN T.return_message is NULL THEN '数据未修改过' ELSE T.return_message END AS returnMessage
		FROM wj_channel_batch_open_account T
		WHERE T.file_batch_no=#{fileBatchNo}
	</select>	
	
	<!-- 根据file_batch_no,更新wj_channel_batch_file表-->
	<update id="updateWjChannelBatchFileByFileBatchNo">
		UPDATE wj_channel_batch_file 
		SET
		 file_check_status=#{fileCheckStatus},
		 file_check_message=#{fileCheckMessage},
		 file_batch_status='Y',
		 update_by=#{updateBy}
	 	WHERE file_batch_no=#{fileBatchNo}
	</update>
	
     <!-- 添加开户明细信息wj_channel_batch_open_account表 -->
	<insert id="insertWjChannelBatchOpenAccount"  parameterType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		INSERT INTO
		wj_channel_batch_open_account(
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(cid)">
		cid,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(indentityType)">
		id_type,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(enterpriseName)">
		enterprise_name,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(phone)">
		phone,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(indentityNo)">
		id_no,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankCardNo)">
		card_no,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(realName)">
		card_name,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankName)">
		bank_name,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankCode)">
		bank_code,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(channelNo)">
		channel_no,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(tradeType)">
		trade_type,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(fileBatchNo)">
		file_batch_no,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(checkStatus)">
		check_status,
	</if>	
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(returnMessage)">
		return_message,
	</if>	
		create_by,
		create_date
		)
		VALUES(
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(cid)">
	 	#{cid},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(indentityType)">
	 	#{indentityType},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(enterpriseName)">
	 	#{enterpriseName},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(phone)">
	 	#{phone},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(indentityNo)">
	 	#{indentityNo},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankCardNo)">
	 	#{bankCardNo},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(realName)">
	 	#{realName},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankName)">
	 	#{bankName},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankCode)">
	 	#{bankCode},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(channelNo)">
	 	#{channelNo},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(tradeType)">
	 	#{tradeType},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(fileBatchNo)">
	 	#{fileBatchNo},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(checkStatus)">
	 	#{checkStatus},
	 </if>
	<if test="@org.apache.commons.lang.StringUtils@isNotBlank(returnMessage)">
	 	#{returnMessage},
	 </if>
		#{createBy},
		now()
		)
	</insert>

	<!-- 更新开户明细信息结果 -->
	<update id="updateUserOpenAccountCheckStatus" parameterType="java.lang.String">
		UPDATE wj_channel_batch_open_account 
			SET
		check_status=#{checkStatus},
		return_message=#{returnMessage},
		update_date = now(),
		update_by='batchOpenAccount'
	 	WHERE id=#{id}
	</update>	
	
	<!-- 更新开户明细信息结果-->
	<update id="updateWjChannelBatchOpenAccount" parameterType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		UPDATE wj_channel_batch_open_account 
			SET
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(cid)">
		 cid=#{cid},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(indentityType)">
		 id_type=#{indentityType},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(enterpriseName)">
		 enterprise_name=#{enterpriseName},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(phone)">
		 phone=#{phone},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(indentityNo)">
		 id_no=#{indentityNo},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankCardNo)">
		 card_no=#{bankCardNo},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(realName)">
		 card_name=#{realName},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankName)">
		 bank_name=#{bankName},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(bankCode)">
		 bank_code=#{bankCode},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(channelNo)">
		 channel_no=#{channelNo},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(tradeType)">
		 trade_type=#{tradeType},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(fileBatchNo)">
		 file_batch_no=#{fileBatchNo},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(checkStatus)">
		 check_status=#{checkStatus},
		 </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(returnMessage)">
		 return_message=#{returnMessage},
		 </if>
		 update_by=#{updateBy}
	 	WHERE id=#{id}
	</update>	
	<!-- 后台 : 创建未激活用户-->
	<insert id="createUnActiveUser" parameterType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		insert into wj_user_info
		(
	        id,
	        phone,
	        real_name,
	        indentity_type,
	        indentity_no,
	        sex,
	        enterprise_no,
	        is_sign,
	        create_date
		)
		values
		(
	      	#{userId},
	      	#{phone},
      		#{realName},
      		#{indentityType},
   			#{indentityNo},
   			#{sex},
		 	#{enterpriseNo},
	        '0',
	    	 now() 
		)
	</insert>
	
	
		<!-- 创建用户账户 -->
	<insert id="createUserAccountInfo">
		insert into wj_user_trade_account
		(
		        id,
		        user_id,
		        trade_type,
		        create_date
		)
		values
		(
		      #{accountId},
		      #{userId}, 
		      #{tradeType}, 
		      now() 
		)
	</insert>
	
	
	<!-- 创建交易锁信息 -->
	<insert id="addUserTransLockInfo">
		insert into wj_biz_lock_info
		 (
		        biz_id,
		        biz_type,
		        lock_flag,
		        create_date
		)
		values (
		        #{userId},
		        'trans',
		        '0',
		        now()
		)
	</insert>
	
	<!-- 后台:  创建用户  安全卡 -->
	<insert id="createSecurityAccountCard" parameterType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.UserOpenAccountDTO">
		insert into wj_trade_account_card
		(
	        id,
	        card_ower,
	        user_id,
	        bank_card_no,
	        aside_bank_phone,
	        bank_name,
	        bank_code,
	        card_type,
	        is_valid,
	        create_date
		)
		values
		(
			#{cardId},
			#{cardOwer},
			#{userId},
			#{bankCardNo},
			#{asideBankPhone},
			#{bankName},
			#{bankCode},
	      	'security',
	      	'yes' ,
	    	 now() 
		)
	</insert>
	<!-- 后台: 插入临时表 -->
	<insert id="saveOpenAccountToTemp" parameterType="java.lang.String">
		insert into
		wj_channel_batch_open_account_run_temp
		(
			file_batch_no,
			user_id
		)
		values
		(
			#{fileBatchNo},
			#{userId}
		)
	</insert>
	

	
	
	<!-- 删除临时表数据 -->
	<delete id="deleteBatchOpenAccountRunTemp" parameterType="java.lang.String">
		delete 
		from 
			wj_channel_batch_open_account_run_temp
		where
			file_batch_no = #{fileBatchNo}
	</delete>
	
	
	
	<!-- 批量开户事务失败，回滚用户银行卡数据 -->
	<delete id="deleteTradeAccountCardForBatchOpenAccountRollback" parameterType="java.lang.String" >
		delete 
		from 
			wj_trade_account_card 
		where 
			user_id in (select t.user_id from wj_channel_batch_open_account_run_temp t where t.file_batch_no = #{fileBatchNo})
	</delete>
	
	
	<!-- 批量开户事务失败，回滚用户账户数据 -->
	<delete id="deleteUserTradeAccountForBatchOpenAccountRollback" parameterType="java.lang.String" >
		delete 
		from 
			wj_user_trade_account 
		where 
			user_id in (select t.user_id from wj_channel_batch_open_account_run_temp t where t.file_batch_no = #{fileBatchNo})
	</delete>
	
	
	<!-- 批量开户事务失败，回滚用户数据 -->
	<delete id="deleteUserInfoForBatchOpenAccountRollback" parameterType="java.lang.String" >
		delete 
		from 
			wj_user_info 
		where 
			id in (select t.user_id from wj_channel_batch_open_account_run_temp t where t.file_batch_no = #{fileBatchNo})
	</delete>
	
		<!-- 批量开户成功后更改文件批量处理状态 -->
	<update id="updateBatchOpenAccountFileHandledStatusSuccess" parameterType="java.lang.String">
		update
			wj_channel_batch_file
		set
			file_check_status = 'audit_success',
			file_check_message='开户成功',
			is_handled = 'handled_success_open_account',
			update_date = now(),
			update_by = 'batchOpenAccount'
		where
			file_batch_no = #{fileBatchNo}
	</update>
	
	
	
	<!-- 批量开户成功后更改文件批量处理状态 -->
	<update id="updateBatchOpenAccountFileHandledStatusFail" parameterType="java.lang.String">
		update
			wj_channel_batch_file
		set
			file_check_status = 'check_fail',
			file_check_message='开户失败',
			is_handled = 'handled_fail_open_account',
			handled_message = #{handledMessage},
			update_date = now(),
			update_by = 'batchOpenAccount'
		where
			file_batch_no = #{fileBatchNo}
	</update>
	
	<!--手机号是否存在-->
	<select id="countPhoneExits" parameterType="java.lang.String" resultType="java.lang.Integer">
		select 
			count(1)
		from 
			wj_user_info w
		where w.phone=#{phone}
	</select>
	
		
	<!--身份证是否存在-->
	<select id="countIdnoExits" parameterType="java.lang.String" resultType="java.lang.Integer">
		select 
			count(1)
		from 
			wj_user_info w
		where w.indentity_no=#{indentityNo}
	</select>
	
	<!--获取银行信息-->	
	<select id="getBankInfo" resultType="com.zhuanyi.vjwealth.wallet.service.mainbiz.user.dto.BankInfoDTO">
			SELECT
				bank_name_show bankNameShow,
				bank_name bankName,
				bank_code bankCode,
				channel channel
			FROM
				wj_bank_info

	</select>
	
	
	<!-- 删除单个临时数据 -->
	<delete id="deleteSingleUserByPhone" parameterType="java.lang.String">
		DELETE
		FROM
			wj_channel_batch_open_account_run_temp
		WHERE
			user_id = (
				SELECT
					id
				FROM
					wj_user_info
				WHERE
					phone = #{phone}) 
	</delete>
	
	<!--挂在WALLET渠道下-->
	<insert id="saveChannelForWallet"  >
		INSERT INTO wj_user_channel_ref (channel_no,user_id,create_date,create_by)
		SELECT	'VJ_WALLET',	w.id,	now(),	'系统初始化'
		FROM
			wj_user_info w
		WHERE
			w.id NOT IN (	SELECT user_id	FROM wj_user_channel_ref	WHERE	channel_no = 'VJ_WALLET')
	</insert>
	
	<!--挂在各自渠道下-->
	<insert id="saveChannelForCompany"  >
		INSERT INTO wj_user_channel_ref (channel_no,user_id,create_date,create_by)
		SELECT	e.channel_no,	w.id,	now(),	'系统初始化'
		FROM
			wj_user_info w,wj_enterprise_info e
		WHERE
		w.enterprise_no=e.id
		and e.channel_no not in ('VJ_WALLET')
		and	w.id NOT IN (	SELECT user_id	FROM wj_user_channel_ref	WHERE	channel_no not in ( 'VJ_WALLET'))
	</insert>
		<!--冻结金额,将企业用户账户的可用余额冻结至冻结金额字段-->
	<update id="updateAvailableAmountToFrozenAmount">
		update 
			wj_ep_user_trade_account 
		set 
		    available_amount=available_amount-#{amount},
			frozen_amount = frozen_amount + #{amount} ,
		  	update_date = now(),
			update_by = 'batchApplyOrder'
		where 
			ep_user_id = #{userId} and trade_account_status='1'
	</update>
	
	<!-- 解冻扣款，将企业用户账户的冻结金额字段直接扣减金额，划款至员工账户-->
	<update id="updateFrozenAmountToEmployee">
		update 
			wj_ep_user_trade_account 
		set 
			frozen_amount = frozen_amount - #{amount},
		  	update_date = now(),
			update_by = 'batchApplyOrder'
		where 
			ep_user_id = #{userId} and trade_account_status='1'
	</update>
	
	<!-- 解冻返款，将企业用户账户的冻结金额返款回可用余额字段-->
	<update id="updateFrozenAmountToAvailableAmount" >
		update 
			wj_ep_user_trade_account 
		set 
		    available_amount=available_amount + #{amount},
			frozen_amount = frozen_amount - #{amount},
		  	update_date = now(),
			update_by = 'batchApplyOrder'
		where 
			ep_user_id = #{userId} and trade_account_status='1'
	</update>
</mapper>